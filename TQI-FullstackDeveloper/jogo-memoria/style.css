* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    height: 100vh;
    display: flex;
    flex-direction: column;
    background-color: rgb(0, 0, 0);
    align-items: center;
}

.memory-game {
    height: 870px;
    width: 698px;
    margin: 24px auto auto auto;
    display: flex;
    flex-wrap: wrap;
    perspective: 1000px; /* perspectiva do usuario no eixo z, quanto maior, maior o efeito da perspectiva */
}

.card {
    height: calc(33.333% - 10px);
    width: calc(25% - 10px);
    margin: 5px;
    position: relative;
    box-shadow: 1px 1px 1px rgba(0,0,0,.3);
    cursor: pointer;
    transform: scale(1);
    transform-style: preserve-3d; /* adiciona perspectiva 3d, para que o elemento nao fique achatada no plano */
    transition: transform .9s; /* adiciona efeito de movimento ao flip do card */
}

.card:active{
    transform: scale(0.97);
    transition: transform .2s;
}

.card-front,
.card-back {
  width: 100%;
  height: 100%;
  padding: 0px;
  position: absolute;
  border-radius: 5px;
  background: rgb(92, 187, 182);
  backface-visibility: hidden; /* todo elemento tem uma frente e um verso (ao contrario, como um espelho.) essa propriedade retira o verso */
}

.card-front {
    transform: rotateY(180deg); /* antes, o verso aparecia transparente, pois ambas as imagens tem position absolute, ao girar no eixo Y, elas ficaram com os versos virados */
}

/* flip card animation */

.card.flip {
    transform: rotateY(180deg);
}

button {
    width: fit-content;
    margin-bottom: 24px;
    padding: 8px 24px;
    border-radius: 4px;
    background-color: rgb(84, 33, 143);
    color: #fff;
    border: 1px solid rgb(68, 27, 116);
    cursor: pointer;
    font-size: 12px;
}

button:focus {
    background-color: rgb(27, 10, 41);
    border: 2px solid rgb(19, 7, 29);
    font-size: 11px;
}